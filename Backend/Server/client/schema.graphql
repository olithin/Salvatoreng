directive @authorize(
  # Defines when when the resolver shall be executed.By default the resolver is
  # executed after the policy has determined that the current user is allowed to
  # access the field.
  apply: ApplyPolicy! = BEFORE_RESOLVER
  # The name of the authorization policy that determines access to the annotated resource.
  policy: String
  # Roles that are allowed to access the annotated resource.
  roles: [String!]
) on SCHEMA | OBJECT | FIELD_DEFINITION
enum ApplyPolicy {
  BEFORE_RESOLVER
  AFTER_RESOLVER
}

type Book {
  author: String
  title: String
}

type Mutation {
  token(email: String, password: String): String
}

type Query {
  book: Book
}

